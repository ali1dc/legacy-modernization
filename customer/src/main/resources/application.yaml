server.port: 8093
management:
  endpoints:
    web:
      base-path: /
      exposure:
        include:
          - health
          - metrics
          - info
          - bindings
  endpoint:
    health.enabled: true
    health.show-details: always

created-by:
  mod: modernized
  legacy: legacy

spring.datasource.driver-class-name: org.postgresql.Driver
spring.datasource.url: ${CUSTOMER_DB_URL}
spring.datasource.username: ${CUSTOMER_DB_USER}
spring.datasource.password: ${CUSTOMER_DB_PASSWORD}
spring.datasource.test-on-borrow: true
spring.datasource.validation-query: SELECT 1
spring.datasource.log-validation-errors: true
spring.jpa.show-sql: true
spring.jpa.hibernate.ddl-auto: none

spring.kafka.bootstrap-servers: ${KAFKA_URL}
spring.cloud.stream.kafka.stream.binder.application-id: customer-microservice
spring.cloud.stream.function.definition: enrichedCustomers;legacyCustomers;legacyCustomerIds

spring.cloud.stream.bindings.legacyCustomers-in-0.destination: legacy.dbo.customers
spring.cloud.stream.bindings.enrichedCustomers-in-0.destination:  customer.public.customer_addresses
spring.cloud.stream.bindings.enrichedCustomers-in-1.destination: customer.public.customers
spring.cloud.stream.bindings.enrichedCustomers-in-2.destination: customer.public.addresses

spring.cloud.stream.bindings.enrichedCustomers-out-0.destination: enriched-customers

spring.cloud.stream.bindings.legacyCustomerIds-in-0.destination: customer-legacy-ids

spring.cloud.stream.kafka.streams.binder.state-store-retry.max-attempts: 100
spring.cloud.stream.kafka.streams.binder.state-store-retry.backoff-period: 10000
spring.cloud.stream.kafka.bindings.products.consumer.max.poll.interval.ms: 10000

flyway:
  driver-class-name: org.postgresql.Driver
  url: ${CUSTOMER_DB_URL}
  user: ${CUSTOMER_DB_USER}
  password: ${CUSTOMER_DB_PASSWORD}
  enable: true
  test-on-borrow: true
  validation-query: SELECT 1
  log-validation-errors: true
