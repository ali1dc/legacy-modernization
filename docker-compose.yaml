version: '2'
services:
  ### INFRASTRUCTURE ###
  zookeeper:
    image: debezium/zookeeper:latest
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_CLIENT_PORT: 19092
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: rack-a
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

  mysql:
    image: debezium/example-mysql:latest
    hostname: mysql
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
     -  3306:3306
    environment:
     - MYSQL_ROOT_PASSWORD=root
     - MYSQL_USER=ali
     - MYSQL_PASSWORD=password
     - MYSQL_DATABASE=legacy_order

  adminer:
    image: adminer:latest
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    ports:
      - 8080:8080

  postgres:
    image: debezium/postgres:9.6
    hostname: postgres
    ports:
     - "5432:5432"
    environment:
     - POSTGRES_USER=postgres
     - POSTGRES_PASSWORD=postgres
    volumes:
      - pg-data:/var/lib/postgresql/data

  connect:
    image: debezium/connect:1.1.1.Final
    ports:
     - 8083:8083
    links:
     - kafka
     - mysql
     - postgres
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses

  ### MODERNIZED MICROSERVICES ###
  ingestor:
    build:
      context: ./ingestor/container
    container_name: ingestor
    hostname: ingestor
    ports:
      - "8092:8092"
    depends_on:
      - kafka
      - mysql
    environment:
      ZK_URL: zookeeper:2181
      KAFKA_URL: kafka:9092
      INGESTOR_DB_URL: jdbc:mysql://mysql:3306/legacy_order
      INGESTOR_DB_USER: root
      INGESTOR_DB_PASSWORD: root

  product:
    build:
      context: ./product/container
    container_name: product
    hostname: product
    ports:
      - "8091:8091"
    depends_on:
      - kafka
      - postgres
    environment:
      KAFKA_URL: kafka:9092
      PRODUCT_DB_URL: jdbc:postgresql://postgres:5432/product
      PRODUCT_DB_USER: postgres
      PRODUCT_DB_PASSWORD: postgres

  customer:
    build:
      context: ./customer/container
    container_name: customer
    hostname: customer
    ports:
      - "8093:8093"
    depends_on:
      - kafka
      - postgres
    environment:
      KAFKA_URL: kafka:9092
      CUSTOMER_DB_URL: jdbc:postgresql://postgres:5432/customer
      CUSTOMER_DB_USER: postgres
      CUSTOMER_DB_PASSWORD: postgres

  order:
    build:
      context: ./order/container
    container_name: order
    hostname: order
    ports:
      - "8094:8094"
    depends_on:
      - kafka
      - postgres
    environment:
      KAFKA_URL: kafka:9092
      ORDER_DB_URL: jdbc:postgresql://postgres:5432/order
      ORDER_DB_USER: postgres
      ORDER_DB_PASSWORD: postgres

  payment:
    build:
      context: ./payment/container
    container_name: payment
    hostname: payment
    ports:
      - "8095:8095"
    depends_on:
      - kafka
      - postgres
    environment:
      KAFKA_URL: kafka:9092
      PAYMENT_DB_URL: jdbc:postgresql://postgres:5432/payment
      PAYMENT_DB_USER: postgres
      PAYMENT_DB_PASSWORD: postgres

  shipment:
    build:
      context: ./shipment/container
    container_name: shipment
    hostname: shipment
    ports:
      - "8096:8096"
    depends_on:
      - kafka
      - postgres
    environment:
      KAFKA_URL: kafka:9092
      SHIPMENT_DB_URL: jdbc:postgresql://postgres:5432/shipment
      SHIPMENT_DB_USER: postgres
      SHIPMENT_DB_PASSWORD: postgres

  # elastic:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:5.5.2
  #   ports:
  #    - "9200:9200"
  #   environment:
  #    - http.host=0.0.0.0
  #    - transport.host=127.0.0.1
  #    - xpack.security.enabled=false

volumes:
  pg-data:
  mysql-data:
